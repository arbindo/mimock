logging:
  level:
    root: INFO

server:
  ssl:
    enabled: ${MIMOCK_KEYSTORE_ENABLE:false}
    key-store: ${MIMOCK_KEYSTORE_PATH:""}
    key-store-password: ${MIMOCK_KEYSTORE_PASSWORD:""}
    key-store-type: PKCS12
    enabled-protocols: TLSv1.3

spring:
  application:
    name: mimock

  main:
    banner-mode: off

  web:
    resources:
      static-locations: classpath:/static/mimock-ui/

  servlet:
    multipart:
      max-file-size: 10MB
      resolve-lazily: true

  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false

  devtools:
    restart:
      enabled: true
      poll-interval: 1s
    livereload:
      enabled: true

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: ${MIMOCK_DB_SCHEMA:mimock_schema}
        types:
          print:
            banner: false

  datasource:
    url: ${MIMOCK_DB_URL:jdbc:postgresql://localhost:5432/mimock_db} # E.g: jdbc:postgresql://localhost:5432/mimock_db
    username: ${MIMOCK_DB_USER:mimock}
    password: ${MIMOCK_DB_PASSWORD:ironclaw}
    driver-class-name: org.postgresql.Driver
    hikari:
      schema: ${MIMOCK_DB_SCHEMA:mimock_schema}

  liquibase:
    change-log: classpath:/db/liquibase-changelog.xml
    default-schema: ${MIMOCK_DB_SCHEMA:mimock_schema}
    liquibase-schema: ${MIMOCK_DB_SCHEMA:mimock_schema}
    user: ${MIMOCK_DB_USER:mimock}
    password: ${MIMOCK_DB_PASSWORD:ironclaw}

app:
  security:
    # NOTES
    # Session timeout value accepts time tokens such as 1s, 2h, 35m etc.,
    # Allowed values
    # s - seconds | m - minutes | h - hours | d - days | w - weeks | M - months | y - years
    # It accepts only whole numeric values (E.g: 210m => Valid ; 3.5h => Invalid)
    # If the token is invalid, then the default timeout value will be used ( 1 Hour )
    jwt-expiry-duration: ${MIMOCK_JWT_EXPIRY_DURATION:24h}
    # End
    jwt-secret-key: ${MIMOCK_JWT_SECRET:${random.value}}
    cors-config:
      allowed-origins: ${MIMOCK_CORS_ORIGINS:http://localhost:3001}
      allowed-methods: ${MIMOCK_CORS_METHODS:GET,POST,PUT,DELETE,OPTIONS}
      allowed-headers: ${MIMOCK_CORS_ALLOWED_HEADERS:GET,POST,PUT,DELETE,OPTIONS}
      exposed-headers: ${MIMOCK_CORS_EXPOSED_HEADERS:Cache-Control,Content-Language,Content-Length,Content-Type,Content-Disposition,Expires,Last-Modified,Pragma}


springdoc:
  swagger-ui:
    doc-expansion: none
    csrf:
      enabled: true
      header-name: X-XSRF-TOKEN

flush-bin-cron-expression: "0 0 3 1 * *"

management:
  endpoints:
    web:
      base-path: "/api/mimock/monitoring"
      exposure:
        include:
          - health
          - info
          - prometheus
